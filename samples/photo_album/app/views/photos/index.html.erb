<div id="posterframe">
  <!-- This will render the fetched Facebook profile picture using Cloudinary according to the
       requested transformations -->
  <%= facebook_profile_image_tag("officialchucknorrispage", :format => "png",
    :transformation => [
      { :height => 95, :width => 95, :crop => "thumb", :gravity => "face", :effect => "sepia", :radius => 20 },
      { "angle" => 10 } ]) %>
</div>

<h1>Welcome!</h1>

<p>
  This is the main demo page of the PhotoAlbum sample Rails application of Cloudinary.<br />
  Here you can see all images you have uploaded to this Rails application and find some information on how
  to implement your own Rails application storing, manipulating and serving your photos using Cloudinary!
</p>

<p>
  All of the images you see here are transformed and served by Cloudinary. 
  For instance, the logo and the poster frame. 
  They are both generated in the cloud using the Cloudinary shortcut functions: fetch_image_tag and facebook_profile_image_tag. 
  These two pictures weren't even have to be uploaded to Cloudinary, they are retrieved by the service, transformed, cached and distributed through a CDN.
</p>

<h1>Your Photos</h1>

<div class="actions">
  <a class="upload_link" href="<%= new_photo_path %>">Add photo</a>
  <a class="upload_link" href="<%= new_photo_path(:direct => true) %>">Add photo (direct upload)</a>
  <a class="upload_link" href="<%= new_photo_path(:direct => true, :unsigned => true) %>">Add photo (unsigned direct upload)</a>
</div>

<div class="photos">
  <% if @photos.empty? %>
    <p>No photos were added yet.</p>
  <% end %>

  <% thumbs_params = { :format => "jpg", :height => 150, :width => 150, :class => "thumbnail inline" } %>
  <% @photos.each do |photo| %>
    <div class="photo">
      <h2><%= photo.title %></h2>
      <a href="<%= photo.image.url %>" target="_blank">
        <%= image_tag(photo.image.thumbnail.url, :class => "thumbnail inline") %>
      </a>
      
      <div class="less_info">
        <a href="#" class="toggle_info">Show transformations</a>
      </div>
      
      <div class="more_info">
        <a href="#" class="toggle_info">Hide transformations</a>
        <table class="thumbnails">
          <% transformations = [
              { :crop => "fill", :radius => 10, :height => 150, :width => 150 },
              { :crop => "scale", :height => 150, :width => 150 },
              { :crop => "fit", :height => 150, :width => 150 },
              { :crop => "thumb", :gravity => "face", :height => 150, :width => 150 },
              { :format => "png", :angle => 20, :transformation => { 
                :crop => "fill", :gravity => "north", :effect => "sepia", :height => 150, :width => 150 } }
            ] %>
          <% transformations.each do |image_params| %>
            <td>
              <div class="thumbnail_holder">
                <a target="_blank" href="<%= cloudinary_url(photo.image, image_params.dup) %>" > 
                  <%= cl_image_tag(photo.image, image_params.merge(:class => "thumbnail inline")) %>
                </a>
              </div>
              <table class="info">
                <% image_params.each_pair do |key, value| %>
                  <tr>
                    <td><%= key %></td>
                    <td><%= value.to_json %></td>
                  </tr>
                <% end %>  
              </table>
              <br/>
            </td>
          <% end %>
        </table>
        
        <div class="note">              
          Take a look at our documentation of <a href="http://cloudinary.com/documentation/image_transformations" target="_blank">Image Transformations</a> for a full list of supported transformations.
        </div>  
      </div>
    </div>
  <% end %>
</div>

<script type='text/javascript'>
  $('.toggle_info').click(function () {
    $(this).closest('.photo').toggleClass('show_more_info');
    return false;
  });
</script>
